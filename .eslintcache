[{"/Users/kimtaesu/Desktop/codestates/todo_list/src/index.js":"1","/Users/kimtaesu/Desktop/codestates/todo_list/src/reportWebVitals.js":"2","/Users/kimtaesu/Desktop/codestates/todo_list/src/component/Title.js":"3","/Users/kimtaesu/Desktop/codestates/todo_list/src/component/App.js":"4","/Users/kimtaesu/Desktop/codestates/todo_list/src/component/Tap.js":"5","/Users/kimtaesu/Desktop/codestates/todo_list/src/component/Todolist.js":"6","/Users/kimtaesu/Desktop/codestates/todo_list/src/component/Todo.js":"7"},{"size":510,"mtime":1606302040532,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1606297271114,"results":"10","hashOfConfig":"9"},{"size":202,"mtime":1606315489463,"results":"11","hashOfConfig":"9"},{"size":1571,"mtime":1606317123306,"results":"12","hashOfConfig":"9"},{"size":296,"mtime":1606317211787,"results":"13","hashOfConfig":"9"},{"size":739,"mtime":1606481509118,"results":"14","hashOfConfig":"9"},{"size":209,"mtime":1606316430278,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"bbrbrd",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"21"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kimtaesu/Desktop/codestates/todo_list/src/index.js",[],["35","36"],"/Users/kimtaesu/Desktop/codestates/todo_list/src/reportWebVitals.js",[],["37","38"],"/Users/kimtaesu/Desktop/codestates/todo_list/src/component/Title.js",["39"],"import App from './App';\nimport React from 'react';\n\n\n\nfunction Title(props) {\n  return (\n    <h1 className={props.isDarkOn ? 'title-dark' : 'title'}>Todo List</h1>\n  );\n}\n\n\n\n\n\n\n\n\nexport default Title;\n",["40","41"],"/Users/kimtaesu/Desktop/codestates/todo_list/src/component/App.js",[],"/Users/kimtaesu/Desktop/codestates/todo_list/src/component/Tap.js",[],"/Users/kimtaesu/Desktop/codestates/todo_list/src/component/Todolist.js",["42"],"import React from 'react';\nimport Todo from './Todo.js';\n\nclass Todolist extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n\n\n\n  render() {\n    return (\n      \n      <div className={this.props.isDarkOn ? \"List-dark\" : \"List\"}>\n        <div className=\"input\">\n          <input type=\"text\" onChange={this.props.handleChange} placeholder='내용을 입력해 주세요!'/>\n          <button className=\"addList\" onClick={() => this.props.PostToDo(this.props.texting)}>Post</button>\n        </div>\n        <ul>\n          {this.props.allList.map(todo => \n          <Todo\n          todo={todo}\n          isDarkOn={this.props.isDarkOn}\n          />\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Todolist;","/Users/kimtaesu/Desktop/codestates/todo_list/src/component/Todo.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"43","replacedBy":"47"},{"ruleId":"45","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":11},{"ruleId":"43","replacedBy":"53"},{"ruleId":"45","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":5,"column":3,"nodeType":"57","messageId":"58","endLine":7,"endColumn":4},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],["59"],["60"],"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar",["59"],["60"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]